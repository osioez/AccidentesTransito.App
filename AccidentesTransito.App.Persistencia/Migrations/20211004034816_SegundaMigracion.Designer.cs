// <auto-generated />
using System;
using AccidentesTransito.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccidentesTransito.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211004034816_SegundaMigracion")]
    partial class SegundaMigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Accidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgenteId")
                        .HasColumnType("int");

                    b.Property<int?>("BarrioId")
                        .HasColumnType("int");

                    b.Property<int>("CantidadFallecidos")
                        .HasColumnType("int");

                    b.Property<int>("CantidadLesionados")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<float>("GeoRreferenciaX")
                        .HasColumnType("real");

                    b.Property<float>("GeoRreferenciaY")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("BarrioId");

                    b.ToTable("Accidentes");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentoIdentidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgente")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Barrio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Barrios");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Conductor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentoIdentidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoLicencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conductores");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Peaton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccidenteId")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentoIdentidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PresentaDiscapacidad")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccidenteId");

                    b.ToTable("Peatones");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.TipoVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVehiculos");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapacidadPasajeros")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Modelo")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoVehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoVehiculoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Accidente", b =>
                {
                    b.HasOne("AccidentesTransito.App.Dominio.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId");

                    b.HasOne("AccidentesTransito.App.Dominio.Barrio", "Barrio")
                        .WithMany()
                        .HasForeignKey("BarrioId");

                    b.Navigation("Agente");

                    b.Navigation("Barrio");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Peaton", b =>
                {
                    b.HasOne("AccidentesTransito.App.Dominio.Accidente", null)
                        .WithMany("Peatones")
                        .HasForeignKey("AccidenteId");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Vehiculo", b =>
                {
                    b.HasOne("AccidentesTransito.App.Dominio.TipoVehiculo", "TipoVehiculo")
                        .WithMany()
                        .HasForeignKey("TipoVehiculoId");

                    b.Navigation("TipoVehiculo");
                });

            modelBuilder.Entity("AccidentesTransito.App.Dominio.Accidente", b =>
                {
                    b.Navigation("Peatones");
                });
#pragma warning restore 612, 618
        }
    }
}
